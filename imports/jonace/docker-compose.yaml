services:
  app:
    container_name: "my-app"
    build:
        context: .
    command: sh -c "npx prisma generate && npm run prod:start"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    ports:
      - "4021:2102"
    restart: unless-stopped
    networks:
      - my-network

  # ----- remove comments to use this database -----
  # db: 
  #   image: postgres
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_PASSWORD=password
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=postgres
  #   ports:
  #     - "5432:5432"
  
  redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    networks:
      - my-network:
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    depends_on:
      - loki

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    restart: unless-stopped
    volumes:
      - ./loki-config.yaml:/etc/loki/loki.config.yaml
    command: -config.file=/etc/loki/loki.config.yaml

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/hostfs'
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/lib/docker:/host/var/lib/docker:ro

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/lib/docker:/host/var/lib/docker:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg


networks:
  my-network:
    driver: bridge

volumes:
  db-data:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local