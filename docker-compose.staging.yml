version: "3.9"

services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-khadamat}
      POSTGRES_USER: ${POSTGRES_USER:-khadamat}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-khadamat}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis_data:/data

  clamav:
    image: clamav/clamav:1.3
    restart: unless-stopped
    ports:
      - "3310:3310"

  api:
    build:
      context: .
      target: api
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:5000}
    env_file:
      - backend/.env.online.staging
    environment:
      PORT: ${PORT:-5000}
      DATABASE_URL: ${DATABASE_URL:-postgresql://khadamat:khadamat@db:5432/khadamat}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      CLAMAV_HOST: ${CLAMAV_HOST:-clamav}
      CLAMAV_PORT: ${CLAMAV_PORT:-3310}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      clamav:
        condition: service_started
    ports:
      - "5000:5000"

  web:
    build:
      context: .
      target: web
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:5000}
    depends_on:
      - api
    ports:
      - "4173:80"

volumes:
  db_data:
  redis_data:
